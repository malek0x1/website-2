{
  "env": {
    "browser": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@next/next/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "sourceType": "module"
  },
  "plugins": [
    "eslint-plugin-import",
    "eslint-plugin-react",
    "@typescript-eslint"
  ],
  "rules": {
    "sort-imports": [
      "warn",
      {
        "ignoreDeclarationSort": true,
        "allowSeparatedGroups": true
      }
    ],
    "import/no-unresolved": "off",
    "import/prefer-default-export": "off",
    "import/order": [
      "warn",
      {
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        },
        "newlines-between": "always",
        "groups": [
          ["builtin", "external"],
          ["internal", "unknown"],
          ["parent", "sibling"]
        ],
        "pathGroups": [
          {
            "pattern": "@Actions/**",
            "group": "internal"
          },
          {
            "pattern": "@Components/**",
            "group": "internal"
          },
          {
            "pattern": "@Pages/**",
            "group": "internal"
          },
          {
            "pattern": "@Public/**",
            "group": "internal"
          },
          {
            "pattern": "@Reducers/**",
            "group": "internal"
          },
          {
            "pattern": "@Redux/**",
            "group": "internal"
          },
          {
            "pattern": "@Server/**",
            "group": "internal"
          },
          {
            "pattern": "@Services/**",
            "group": "internal"
          }
        ],
        "pathGroupsExcludedImportTypes": []
      }
    ],
    "import/extensions": "off",
    "import/no-extraneous-dependencies": "off",
    "import/no-named-default": "off",
    "react/destructuring-assignment": "off",
    "react/display-name": "off",
    "react/jsx-boolean-value": ["off", "never"],
    "react/jsx-curly-newline": "off",
    "react/jsx-curly-spacing": "off",
    "react/jsx-equals-spacing": "off",
    "react/jsx-filename-extension": [
      "warn",
      {
        "extensions": [".jsx", ".tsx"]
      }
    ],
    "react/jsx-key": "error",
    "react/jsx-indent": "off",
    "react/jsx-no-bind": "off",
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-wrap-multilines": "error",
    "react/no-access-state-in-setstate": "off",
    "react/no-array-index-key": "off",
    "react/no-children-prop": "off",
    "react/no-danger": "off",
    "react/no-deprecated": "off",
    "react/no-did-update-set-state": "off",
    "react/prefer-stateless-function": "off",
    "react/prop-types": "off",
    "react/sort-comp": "off",
    "react/state-in-constructor": "off",
    "@next/next/no-document-import-in-page": "off",
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/ban-types": [
      "error",
      {
        "types": {
          "Object": {
            "message": "Avoid using the `Object` type. Did you mean `object`?"
          },
          "Function": {
            "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
          },
          "Boolean": {
            "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
          },
          "Number": {
            "message": "Avoid using the `Number` type. Did you mean `number`?"
          },
          "String": {
            "message": "Avoid using the `String` type. Did you mean `string`?"
          },
          "Symbol": {
            "message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
          },
          "object": false,
          "{}": false
        }
      }
    ],
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/consistent-type-definitions": "off",
    "@typescript-eslint/dot-notation": "error",
    "@typescript-eslint/explicit-member-accessibility": [
      "off",
      {
        "accessibility": "explicit"
      }
    ],
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/member-delimiter-style": [
      "off",
      {
        "multiline": {
          "delimiter": "none",
          "requireLast": true
        },
        "singleline": {
          "delimiter": "semi",
          "requireLast": false
        }
      }
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [
          // Index signature
          // No scope for index signature. See above.
          // Fields
          "static-field", // = ["public-static-field", "protected-static-field", "private-static-field"]
          "static-method", // = ["public-static-method", "protected-static-method", "private-static-method"]
          "instance-field", // = ["public-instance-field", "protected-instance-field", "private-instance-field"]
          "abstract-field", // = ["public-abstract-field", "protected-abstract-field", "private-abstract-field"]
          // Constructors
          "constructor", // = ["public-constructor", "protected-constructor", "private-constructor"]
          // Methods
          "instance-method", // = ["public-instance-method", "protected-instance-method", "private-instance-method"]
          "abstract-method" // = ["public-abstract-method", "protected-abstract-method", "private-abstract-method"]
        ]
      }
    ],
    "@typescript-eslint/naming-convention": "off",
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-namespace": "off",
    "@typescript-eslint/no-parameter-properties": "off",
    "@typescript-eslint/no-shadow": ["error"],
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/quotes": "off",
    "@typescript-eslint/semi": ["off", null],
    "@typescript-eslint/triple-slash-reference": [
      "error",
      {
        "path": "always",
        "types": "prefer-import",
        "lib": "always"
      }
    ],
    "@typescript-eslint/type-annotation-spacing": "off",
    "@typescript-eslint/unified-signatures": "error",
    "arrow-body-style": ["off", "always"],
    "@next/next/no-img-element": "off",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-case-declarations": "off",
    "no-cond-assign": "error",
    "no-console": "warn",
    "no-continue": "off",
    "no-debugger": "error",
    "no-duplicate-imports": "error",
    "no-empty": "error",
    "no-eval": "error",
    "no-extra-boolean-cast": "off",
    "no-extra-semi": "off",
    "no-fallthrough": "off",
    "no-import-assign": "off",
    "no-invalid-this": "off",
    "no-irregular-whitespace": "off",
    "no-multiple-empty-lines": "off",
    "no-nested-ternary": "off",
    "no-new-wrappers": "error",
    "no-param-reassign": "off",
    "no-prototype-builtins": "off",
    "no-restricted-imports": ["error", "lodash", "recompose"],
    "no-restricted-syntax": "off",
    "no-return-await": "off",
    "no-shadow": "off",
    "no-throw-literal": "error",
    "no-trailing-spaces": "off",
    "no-undef": "off",
    "no-undef-init": "error",
    "no-underscore-dangle": "off",
    "no-unneeded-ternary": "off",
    "no-unsafe-finally": "error",
    "no-unused-labels": "error",
    "no-unused-vars": "off",
    "no-use-before-define": "off",
    "no-useless-computed-key": "off",
    "no-useless-escape": "off",
    "no-var": "error"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}
