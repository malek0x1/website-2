"use strict";(self.webpackChunkstarlake=self.webpackChunkstarlake||[]).push([[5659],{98713:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var i=n(74848),s=n(28453);const a={slug:"how-unit-test-your-sql-data-pipelines",title:"How to unit test your data pipelines",author:"Bounkong Khamphousone",author_title:"Starlake Core Team",author_url:"https://www.linkedin.com/in/bounkong/",author_image_url:"https://2.gravatar.com/avatar/82db9f824c7cc18bd7b7e091c5752353c869752d8ff5bac90e8770de89635cf9",tags:["Unit Test","Databricks","DuckDB","Data Engineering","Analytics","BigQuery","Snowflake","Redshift"]},r=void 0,o={permalink:"/starlake/blog/how-unit-test-your-sql-data-pipelines",editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/blog/2024-07-05-how-to-unit-test-your-sql-data-pipelines.mdx",source:"@site/blog/2024-07-05-how-to-unit-test-your-sql-data-pipelines.mdx",title:"How to unit test your data pipelines",description:"In today's data-driven landscape, ensuring the reliability and accuracy of your data warehouse is paramount. The cost of not testing your data can be astronomical, leading to critical business decisions based on faulty data and eroding trust.",date:"2024-07-05T00:00:00.000Z",tags:[{inline:!0,label:"Unit Test",permalink:"/starlake/blog/tags/unit-test"},{inline:!0,label:"Databricks",permalink:"/starlake/blog/tags/databricks"},{inline:!0,label:"DuckDB",permalink:"/starlake/blog/tags/duck-db"},{inline:!0,label:"Data Engineering",permalink:"/starlake/blog/tags/data-engineering"},{inline:!0,label:"Analytics",permalink:"/starlake/blog/tags/analytics"},{inline:!0,label:"BigQuery",permalink:"/starlake/blog/tags/big-query"},{inline:!0,label:"Snowflake",permalink:"/starlake/blog/tags/snowflake"},{inline:!0,label:"Redshift",permalink:"/starlake/blog/tags/redshift"}],readingTime:5.35,hasTruncateMarker:!1,authors:[{name:"Bounkong Khamphousone",title:"Starlake Core Team",url:"https://www.linkedin.com/in/bounkong/",imageURL:"https://2.gravatar.com/avatar/82db9f824c7cc18bd7b7e091c5752353c869752d8ff5bac90e8770de89635cf9",key:null,page:null}],frontMatter:{slug:"how-unit-test-your-sql-data-pipelines",title:"How to unit test your data pipelines",author:"Bounkong Khamphousone",author_title:"Starlake Core Team",author_url:"https://www.linkedin.com/in/bounkong/",author_image_url:"https://2.gravatar.com/avatar/82db9f824c7cc18bd7b7e091c5752353c869752d8ff5bac90e8770de89635cf9",tags:["Unit Test","Databricks","DuckDB","Data Engineering","Analytics","BigQuery","Snowflake","Redshift"]},unlisted:!1,nextItem:{title:"Polars versus Spark",permalink:"/starlake/blog/polars-vs-spark"}},l={authorsImageUrls:[void 0]},d=[{value:"The art of mastering data pipelines",id:"the-art-of-mastering-data-pipelines",level:2},{value:"Untested SQL costs",id:"untested-sql-costs",level:2},{value:"Writing unit test in Starlake",id:"writing-unit-test-in-starlake",level:2},{value:"Starlake unit tests benefits",id:"starlake-unit-tests-benefits",level:2},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const t={a:"a",h2:"h2",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components},{Head:a}=t;return a||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a,{children:(0,i.jsx)("link",{rel:"canonical",href:"https://www.linkedin.com/pulse/how-unit-test-your-sql-data-pipelines-bounkong-khamphousone-2xwye"})}),"\n",(0,i.jsx)(t.p,{children:"In today's data-driven landscape, ensuring the reliability and accuracy of your data warehouse is paramount. The cost of not testing your data can be astronomical, leading to critical business decisions based on faulty data and eroding trust.\xa0"}),"\n",(0,i.jsxs)(t.p,{children:["The path to rigorous data testing comes with its own set of challenges. In this article, I will highlight how you can confidently deploy your data pipelines by leveraging ",(0,i.jsx)(t.a,{href:"https://github.com/starlake-ai/jsqltranspiler",children:"Starlake JSQLTranspiler"})," and DuckDB, while also reducing costs. we will go beyond testing your transform usually written in SQL and see how we can also test our Ingestion jobs."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(61384).A+"",width:"752",height:"423"})}),"\n",(0,i.jsx)(t.h2,{id:"the-art-of-mastering-data-pipelines",children:"The art of mastering data pipelines"}),"\n",(0,i.jsx)(t.p,{children:"Mastering your data pipeline is a challenging art. A data pipeline generally contains the following phases:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Collection:"})," Extracting data from sources"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Ingestion:"})," Loading the extracted data into the data warehouse"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Transformation:"})," A phase that ultimately adds value to the collected data"]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["The table below summarizes the tests run by Starlake on ",(0,i.jsx)(t.a,{href:"https://starlake.ai/starlake/docs/next/category/load",children:"Load"})," & ",(0,i.jsx)(t.a,{href:"https://starlake.ai/starlake/docs/next/category/transform",children:"Transform"})," jobs:"]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Check to run on"}),(0,i.jsx)(t.th,{children:"Ingestion Test"}),(0,i.jsx)(t.th,{children:"Transform Test"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Validate the filename pattern"}),(0,i.jsx)(t.td,{children:"\u2713"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Validate the file structure (number and types of attributes, input file format - CSV / JSON / XML / FIXED-WIDTH)"}),(0,i.jsx)(t.td,{children:"\u2713"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Check if loaded files or transform SQL SELECT statements\xa0 are materialized according to the defined strategy (APPEND / OVERWRITE / UPSERT_BY_KEY, SCD2 \u2026)"}),(0,i.jsx)(t.td,{children:"\u2713"}),(0,i.jsx)(t.td,{children:"\u2713"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Check for missing or unexpected records in the resulting table"}),(0,i.jsx)(t.td,{children:"\u2713"}),(0,i.jsx)(t.td,{children:"\u2713"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Check if the resulting table has a correct schema"}),(0,i.jsx)(t.td,{children:"\u2713"}),(0,i.jsx)(t.td,{children:"\u2713"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Check all expectations"}),(0,i.jsx)(t.td,{children:"\u2713"}),(0,i.jsx)(t.td,{children:"\u2713"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Check time based query output with time freeze"}),(0,i.jsx)(t.td,{children:"\u2713"}),(0,i.jsx)(t.td,{children:"\u2713"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"The results of these automated tests are designed for both human review and CI/CD integration. For human review, a website is generated to help users easily identify failures and their causes. For CI/CD integration, a JUnit report is generated, and there is an option to specify a minimum coverage threshold. If the evaluated coverage falls below this threshold, the command will result in an error, and any failing tests will also trigger errors."}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"untested-sql-costs",children:"Untested SQL costs"}),"\n",(0,i.jsx)(t.p,{children:"Thanks to data pipelines unit testing, we drastically reduce the development cost. Not running tests seems to allow high project's velocity, thereby delivering value quickly. However, the cost of a feature does not stop at its simple development but encompasses all the efforts put in until the feature's completion. Below are some hidden costs."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Identifying bugs"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Without unit tests, verifying development requires deploying the project. This deployment raises challenging questions about the deployment strategy and its rollback or correction procedures."}),"\n",(0,i.jsx)(t.li,{children:"Verification might be carried out by a separate QA team, sometimes even outside the project team. This can lead to the use of feature flags to avoid deploying to production, complicating the implementation. Additionally, waiting for feedback from the QA team introduces delays, increasing the cost of fixing any bugs that arise."}),"\n",(0,i.jsx)(t.li,{children:"Depending on the deployment strategy, verification may also be incomplete due to a lack of control over the test data used."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Maintenance and Evolution Complexity"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Many of us have faced a massive query and struggled to make modifications without disrupting existing functionality, all while aiming for improvements like optimizing processing time. Rigorous unit tests can help with this. They allow us to enhance the expected outcomes in current datasets, create new ones, and compare the modified query results with these expectations. This significantly reduces the risk of regression."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Decreased productivity"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"The absence of automated tests often means manually re-running parts or all of the system to ensure correct integration, which can lead to spending time fixing collateral bugs and thus reducing overall productivity. As the project advances, more components need verification, making the process even more time-consuming. This significantly diminishes the willingness to refactor or revise code."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Promoting expertise"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Without unit tests, teams often assign the same tasks to the same people, which hinders skill development and increases the risk of knowledge loss due to turnover."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Customer dissatisfaction"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"A project with uncertain product output quality often leads to dissatisfaction, frustration, and a loss of trust in the individual, the team, or the product."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"We are all aware of the hidden costs associated with the absence of tests; in my opinion, these are the most significant. Therefore, we will explore how to manage a data pipeline."}),"\n",(0,i.jsx)(t.h2,{id:"writing-unit-test-in-starlake",children:"Writing unit test in Starlake"}),"\n",(0,i.jsxs)(t.p,{children:["Suppose we have the following transform.\n",(0,i.jsx)(t.img,{alt:"Starlake transform folder hierachy",src:n(36285).A+"",title:"Starlake transform folder hierachy",width:"744",height:"347"})]}),"\n",(0,i.jsxs)(t.p,{children:["We test it by creating the following hierarchy:\n",(0,i.jsx)(t.img,{alt:"Starlake test transform folder hierachy",src:n(47354).A+"",title:"Starlake test transform folder hierachy",width:"1488",height:"964"})]}),"\n",(0,i.jsxs)(t.p,{children:["This is then how it is executed\n",(0,i.jsx)(t.img,{alt:"Data pipeline unit test lifecycle",src:n(10707).A+"",title:"Data pipeline unit test lifecycle",width:"1488",height:"837"})]}),"\n",(0,i.jsx)(t.h2,{id:"starlake-unit-tests-benefits",children:"Starlake unit tests benefits"}),"\n",(0,i.jsx)(t.p,{children:"Running tests on a local DuckDB database instead of the target Data Warehouse has the following advantages:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Fast Feedback:"})," Local execution is significantly faster than using a remote database due to network latency. Additionally, the local environment might be better suited for handling small volumes of test data."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"No Execution Cost:"})," Depending on the pricing model of the target database, creating temporary resources and executing queries can incur both execution and storage costs."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Setup and Cleanup of Automated Tests:"})," Guarantee of resource isolation."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Credential Issues:"})," Running tests against a target database requires credentials, which may pose security risks."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsx)(t.p,{children:"In this article, we have demonstrated how adopting unit testing, a crucial practice for software engineers, can significantly enhance the quality of our data pipelines. This approach not only reduces overall costs in the medium to long term but also ensures the maintenance of dynamic and enduring documentation. Additionally, implementing unit tests is essential for rigorous CI/CD processes, enabling seamless continuous data pipeline deployment."}),"\n",(0,i.jsxs)(t.p,{children:["If you encounter any issues while performing your tests locally, please report them on the ",(0,i.jsx)(t.a,{href:"https://github.com/starlake-ai/starlake",children:"Starlake GitHub repository"}),". Your feedback is invaluable in improving local test coverage, empowering more data engineers to deploy their work confidently and smoothly. For further discussions and support, join our team on ",(0,i.jsx)(t.a,{href:"https://join.slack.com/t/starlakeai/shared_invite/zt-28vf5d49s-rnyuh70OrJjcX_2Vz2mafw",children:"Slack"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"We greatly appreciate your contributions. If you found this article helpful, please star the project on GitHub and share it on your social networks to help us reach a broader audience."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},61384:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/data-pipeline-cicd-bcc87fb85edbabe13eee07d78978037c.gif"},10707:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/data-pipeline-unit-test-lifecycle-3f116018de74957f7a1fd9a31d6b4603.gif"},47354:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/starlake-test-transform-folder-hierarchy-aaed9899b6fa836991e59dc834b2fe75.png"},36285:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/starlake-transform-folder-hierarchy-9713252e3cd60761bfdd8c239b26bca1.png"},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var i=n(96540);const s={},a=i.createContext(s);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);